FORMAT: 1A
HOST: https://api.healthdata.be

# HealthData API
Collection of all the different APIs provided by HealthData.

##Allowed HTTPs requests:

- `POST` - To create resource
- `PUT` - To update resource
- `GET` - Get a resource or list of resources
- `DELETE` - To delete resource

##Description Of Usual Server Responses

- 200 `OK` - the request was successful (some API calls may return 201 instead).
- 201 `Created` - the request was successful and a resource was created.
- 204 `No Content` - the request was successful but there is no representation to return (i.e. the response is empty).
- 206 `Partial Content` - The server has fulfilled the partial GET request for the resource.
- 302 `Redirected` - the request is redirected to the URL in the Location header.
- 400 `Bad Request` - the request could not be understood or was missing required parameters.
- 401 `Unauthorized` - authentication failed or user doesn't have permissions for requested operation.
- 403 `Forbidden` - access denied.
- 404 `Not Found` - resource was not found.
- 405 `Method Not Allowed` - requested method is not supported for resource.
- 429 `Too Many Requests` - exceeded GoodData API limits. Pause requests, wait up to one minute, and try again. 
- 503 `Service Unavailable` - service is temporary unavailable (e.g. scheduled Platform Maintenance). Try again later.

# Group Configuration API
Part of the **HealthData API** that allows to interact with configuration parameters

A Configuration resource consists basically of a key-value pair with some additional attributes:

- id
- key
- value
- defaultValue
- description
- type
- allowedValues
- readable
- advanced
- updatedOn

The *updatedOn* attribute is assigned by the logic at the moment of change.

## Configuration - ID [/configurations/{id}]

+ Parameters
    + id (required, string, `"configurations ID"`) ... Configuration `id`.

+ Model (application/json)

    JSON representation of a Configuration resource. 

    + Body

            {
                "id": 1,
                "key": "CATALOGUE_HOST",
                "value": "https://catalogue.healthdata.be",
                "defaultValue": "https://catalogue.healthdata.be",
                "description": "the host of the catalogue",
                "type": "STRING",
                "allowedValues": [ ],
                "readable": true,
                "advanced": false,
                "updatedOn": "2015-04-21T06:38:45Z"
            }

### GET
This API call will GET you the Configuration value that matches the passed key.

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200
    [Configuration - ID][]

### PUT
This API call will UPDATE an existing configuration value.

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

    + Body
    
            {
                "id": 1,
                "key": "CATALOGUE_HOST",
                "value": "https://catalogue.healthdata.be",
                "defaultValue": "https://catalogue.healthdata.be",
                "description": "the host of the catalogue",
                "type": "STRING",
                "allowedValues": [ ],
                "readable": true,
                "advanced": false,
                "updatedOn": "2015-04-21T06:38:45Z"
            }
+ Response 200
    [Configuration - ID][]

## Configurations - QueryString parameters [/configurations{?key,value,defaultValue,description,type}]

List all existing Configuration that match the given QueryString parameters.
 
### GET
+ Parameters
    + key (optional, string, `CATALOGUE_HOST`) ... the configuration key.
    + value (optional, string, `https://catalogue.healthdata.be`) ... the configuration value.
    + defaultValue (optional, string, `https://catalogue.healthdata.be`) ... the configuration default value.
    + description (optional, string, `the host of the catalogue`) ... the configuration description.
    + type (optional, string, `STRING`) ... the configuration type [STRING, INTEGER, DATE, BOOLEAN or ENUM].

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200 (application/json)

    + Body
    
            [
                {
                    "id": 1,
                    "key": "CATALOGUE_HOST",
                    "value": "https://catalogue.healthdata.be",
                    "defaultValue": "https://catalogue.healthdata.be",
                    "description": "the host of the catalogue",
                    "type": "STRING",
                    "allowedValues": [ ],
                    "readable": true,
                    "advanced": false,
                    "updatedOn": "2015-04-21T06:38:45Z"
                },
                {
                    "id": 2,
                    "key": "CATALOGUE_PORT",
                    "value": "443",
                    "defaultValue": "443",
                    "description": "the port of the catalogue",
                    "type": "STRING",
                    "allowedValues": [ ],
                    "readable": true,
                    "advanced": false,
                    "updatedOn": "2015-04-13T11:28:39Z",
                }
            ]

## Configurations - DataReference [/configurations/datareference]

### GET
This API call will GET you the Configuration for access to the datareference of the catalogue without any required authentication. This is for the mapping and validation API.

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200 (application/json)

    + Body
    
            {
                "hostname": "https://catalogue.healthdata.be",
                "port": "443",
                "pathname": "/healthdata_catalogue/dataReference"
            }

# Group Datacollection Definition API
DataCollectionDefinitions-related resources of the **HealthData API**

A single DataCollectionDefinition object with all its details

The DataCollectionDefinition resource has the following attributes:

- id
- dataCollectionName
- description
- version
- createdOn
- startDate
- endDateCreation
- endDateSubmission
- endDateComments
- content

The states *id* and *created_on* are assigned by the Collections API at the moment of creation.

## Datacollection Definition - ID [/datacollectiondefinitions/{id}]

+ Parameters
    + id (required, string, `"1"`) ... `ID` of the DataCollectionDefinition. Has example value.

+ Model (application/json)

    JSON representation of a DataCollectionDefinition resource. 

    + Body

            {
                "id": 1,
                "dataCollectionName": "TEST",
                "description": "TEST Data Collection",
                "version": "1",
                "createdOn": "2015-04-03T16:01:12Z",
                "startDate": "2014-01-01T00:00:00Z",
                "endDateCreation": null,
                "endDateSubmission": null,
                "endDateComments": null,
                "content": "{\"label\": \"TEST\",\"fields\": [{\"label\": \"Favourite color\",\"name\": \"favourite_color\",\"type\": \"text\",\"required\": true},        {            \"label\": \"Patient ID\",            \"name\": \"patient_id\",            \"type\": \"patientID\",            \"required\": true,            \"keep\": true,            \"inputsize\": 12,            \"fields\": [                {                    \"label\": \"Name\",                    \"name\": \"name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"First Name\",                    \"name\": \"first_name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"Date of birth\",                    \"name\": \"date_of_birth\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Sex\",                    \"name\": \"sex\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Place of residence\",                    \"name\": \"place_of_residence\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Deceased?\",                    \"name\": \"deceased\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Date of death\",                    \"name\": \"date_of_death\",                    \"required\": false,                    \"keep\": true                }            ]        }]}"
            }

### GET
This API call will GET you the Datacollection definition with the provided ID.
    
+ Response 200
    [Datacollection Definition - ID][]

## Datacollection Definition - Name & Version [/datacollectiondefinitions/{name}/{version}]

### GET
This API call will GET you the Datacollection definition with the provided name and version.
+ Parameters
    + name (required, string, `"register 1"`) ... `name` of the DataCollectionDefinition. Has example value.
    + version (required, string, `"1.0"`) ... `version` of the DataCollectionDefinition. Has example value.

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "dataCollectionName": "TEST",
                "description": "TEST Data Collection",
                "version": "1",
                "createdOn": "2015-04-03T16:01:12Z",
                "startDate": "2014-01-01T00:00:00Z",
                "endDateCreation": null,
                "endDateSubmission": null,
                "endDateComments": null,
                "content": "{\"label\": \"TEST\",\"fields\": [{\"label\": \"Favourite color\",\"name\": \"favourite_color\",\"type\": \"text\",\"required\": true},        {            \"label\": \"Patient ID\",            \"name\": \"patient_id\",            \"type\": \"patientID\",            \"required\": true,            \"keep\": true,            \"inputsize\": 12,            \"fields\": [                {                    \"label\": \"Name\",                    \"name\": \"name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"First Name\",                    \"name\": \"first_name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"Date of birth\",                    \"name\": \"date_of_birth\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Sex\",                    \"name\": \"sex\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Place of residence\",                    \"name\": \"place_of_residence\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Deceased?\",                    \"name\": \"deceased\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Date of death\",                    \"name\": \"date_of_death\",                    \"required\": false,                    \"keep\": true                }            ]        }]}"
            }

## Datacollection Definitions [/datacollectiondefinitions]

### POST
Add a new instance to the Datacollection Definition to the database. Only accessible for an ADMIN user

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

    + Body
    
            {
                "dataCollectionName": "TEST",
                "description": "TEST Data Collection",
                "version": "1",
                "startDate": "2014-01-01T00:00:00Z",
                "endDateCreation": null,
                "endDateSubmission": null,
                "endDateComments": null,
                "content": "{\"label\": \"TEST\",\"fields\": [{\"label\": \"Favourite color\",\"name\": \"favourite_color\",\"type\": \"text\",\"required\": true},        {            \"label\": \"Patient ID\",            \"name\": \"patient_id\",            \"type\": \"patientID\",            \"required\": true,            \"keep\": true,            \"inputsize\": 12,            \"fields\": [                {                    \"label\": \"Name\",                    \"name\": \"name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"First Name\",                    \"name\": \"first_name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"Date of birth\",                    \"name\": \"date_of_birth\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Sex\",                    \"name\": \"sex\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Place of residence\",                    \"name\": \"place_of_residence\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Deceased?\",                    \"name\": \"deceased\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Date of death\",                    \"name\": \"date_of_death\",                    \"required\": false,                    \"keep\": true                }            ]        }]}"
            } 
        
            
+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "dataCollectionName": "TEST",
                "description": "TEST Data Collection",
                "version": "1",
                "createdOn": "2015-04-03T16:01:12Z",
                "startDate": "2014-01-01T00:00:00Z",
                "endDateCreation": null,
                "endDateSubmission": null,
                "endDateComments": null,
                "content": "{\"label\": \"TEST\",\"fields\": [{\"label\": \"Favourite color\",\"name\": \"favourite_color\",\"type\": \"text\",\"required\": true},        {            \"label\": \"Patient ID\",            \"name\": \"patient_id\",            \"type\": \"patientID\",            \"required\": true,            \"keep\": true,            \"inputsize\": 12,            \"fields\": [                {                    \"label\": \"Name\",                    \"name\": \"name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"First Name\",                    \"name\": \"first_name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"Date of birth\",                    \"name\": \"date_of_birth\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Sex\",                    \"name\": \"sex\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Place of residence\",                    \"name\": \"place_of_residence\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Deceased?\",                    \"name\": \"deceased\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Date of death\",                    \"name\": \"date_of_death\",                    \"required\": false,                    \"keep\": true                }            ]        }]}"
            }

## Datacollection Definition - QueryString parameters [/datacollectiondefinitions{?identificationType,identificationValue,dataCollectionName,validForCreation,validForSubmission,validForComments,description,Range}]

List all existing Datacollections that match the given QueryString parameters.
 
### GET
+ Parameters
    + identificationType (required, string, `"NIHII"`) ... the `IdentificationType` of the hd4dp user.
    + identificationValue (required, string, `"123456"`) ... the `IdentificationValue` of the hd4dp user.
    + dataCollectionName (optional, string, `"register 1"`) ... `name` of the DataCollectionDefinition.
    + validForCreation (optional, string, `"11/10/1985"`) ... Date  on which the DataCollectionDefinition must be valid for creation.
    + validForSubmission (optional, string, `"11/10/1985"`) ... Date  on which the DataCollectionDefinition must be valid for submission.
    + validForComments (optional, string, `"11/10/1985"`) ... Date  on which the DataCollectionDefinition must be valid for comments.
    + description (optional, string, ) ... `Description` of the DataCollectionDefinition.
    + Range (optional, string, `"items=1-20"`) ...  `Range` of the DataCollectionDefinition that you want.
    
+ Request
    
    + Headers
    
            Accept: "application/json"

+ Response 200 (application/json)

    + Body
    
            [
                {
                    "id": 1,
                    "dataCollectionName": "TEST",
                    "description": "TEST Data Collection",
                    "version": "1",
                    "createdOn": "2015-04-03T16:01:12Z",
                    "startDate": "2014-01-01T00:00:00Z",
                    "endDateCreation": null,
                    "endDateSubmission": null,
                    "endDateComments": null,
                    "content": "{\"label\": \"TEST\",\"fields\": [{\"label\": \"Favourite color\",\"name\": \"favourite_color\",\"type\": \"text\",\"required\": true},        {            \"label\": \"Patient ID\",            \"name\": \"patient_id\",            \"type\": \"patientID\",            \"required\": true,            \"keep\": true,            \"inputsize\": 12,            \"fields\": [                {                    \"label\": \"Name\",                    \"name\": \"name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"First Name\",                    \"name\": \"first_name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"Date of birth\",                    \"name\": \"date_of_birth\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Sex\",                    \"name\": \"sex\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Place of residence\",                    \"name\": \"place_of_residence\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Deceased?\",                    \"name\": \"deceased\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Date of death\",                    \"name\": \"date_of_death\",                    \"required\": false,                    \"keep\": true                }            ]        }]}"
                },
                {
                    "id": 2,
                    "dataCollectionName": "TEST2",
                    "description": "TEST2 Data Collection",
                    "version": "1",
                    "createdOn": "2015-04-03T16:01:12Z",
                    "startDate": "2014-01-01T00:00:00Z",
                    "endDateCreation": null,
                    "endDateSubmission": null,
                    "endDateComments": null,
                    "content": "{\"label\": \"TEST2\",\"fields\": [{\"label\": \"Favourite color\",\"name\": \"favourite_color\",\"type\": \"text\",\"required\": true},        {            \"label\": \"Patient ID\",            \"name\": \"patient_id\",            \"type\": \"patientID\",            \"required\": true,            \"keep\": true,            \"inputsize\": 12,            \"fields\": [                {                    \"label\": \"Name\",                    \"name\": \"name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"First Name\",                    \"name\": \"first_name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"Date of birth\",                    \"name\": \"date_of_birth\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Sex\",                    \"name\": \"sex\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Place of residence\",                    \"name\": \"place_of_residence\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Deceased?\",                    \"name\": \"deceased\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Date of death\",                    \"name\": \"date_of_death\",                    \"required\": false,                    \"keep\": true                }            ]        }]}"
                }
            ]


+ Request

    + Headers
            
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"
            Range: "items=1-1"

+ Response 206 (application/json)

    + Headers
        
            Accept: "application/json"
            Content-Range: "items 1-1/2"

    + Body
    
            [
                {
                    "id": 1,
                    "dataCollectionName": "TEST",
                    "description": "TEST Data Collection",
                    "version": "1",
                    "createdOn": "2015-04-03T16:01:12Z",
                    "startDate": "2014-01-01T00:00:00Z",
                    "endDateCreation": null,
                    "endDateSubmission": null,
                    "endDateComments": null,
                    "content": "{\"label\": \"TEST\",\"fields\": [{\"label\": \"Favourite color\",\"name\": \"favourite_color\",\"type\": \"text\",\"required\": true},        {            \"label\": \"Patient ID\",            \"name\": \"patient_id\",            \"type\": \"patientID\",            \"required\": true,            \"keep\": true,            \"inputsize\": 12,            \"fields\": [                {                    \"label\": \"Name\",                    \"name\": \"name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"First Name\",                    \"name\": \"first_name\",                    \"required\": \"noSSIN\",                    \"keep\": false                },                {                    \"label\": \"Date of birth\",                    \"name\": \"date_of_birth\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Sex\",                    \"name\": \"sex\",                    \"required\": \"noSSIN\",                    \"keep\": true                },                {                    \"label\": \"Place of residence\",                    \"name\": \"place_of_residence\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Deceased?\",                    \"name\": \"deceased\",                    \"required\": false,                    \"keep\": true                },                {                    \"label\": \"Date of death\",                    \"name\": \"date_of_death\",                    \"required\": false,                    \"keep\": true                }            ]        }]}"
                }
            ]

# Group Data Reference API
DataReference-related resources of the **HealthData API**

- type
- code
- parentCode
- value
- language
- parents
- children

## Data References - QueryString [/dataReferences{?type,code,parentCode,value,language,validOn,filter,sorting,fullSearch}]

+ Parameters
    + type (optional, string, `"ZIP"` ) ... `Type` of the Data Reference entry.
    + code (optional, string, `"1800"`) ... `Code` of the Data Reference entry.
    + parentCode (optional, string) ... `ParentCode` of the Data Reference entry.
    + value (optional, string, `"Vilvoorde"` ) ...  `Value` of a Data Reference entry in a certain language.
    + language (optional, string, `"NL"` ) ...  `Language` of the value of the Data Reference entry.
    + validOn (optional, string, `"11/10/1985"` ) ... The date that the value must be legal on. Today by default.
    + filter (optional, string, `"ALL"` ) ...  The type of  Filter  you want to use when searching for a code or value. Possible values are ALL, EXACT, START and END. ALL by default.
    + sorting (optional, string, `"SEARCH_FIRST"` ) ... The type of sorting you want to use on your result. Possible values are SEARCH_FIRST and ALPHABETICALLY. SEARCH_FIRST by default.
    + fullSearch (optional, string, `"true"` ) ... Option to add to the search to also load the parent and children codes. This will slow down the call so it is best done one a single result search.
    
+ Model (application/json)

    JSON representation of a Data Reference resource. 


    + Headers
    
            Accept: "application/json"

    + Body
    
            [
                {
                    type: "BNMDR"
                    code: "42000000"
                    parentCode: "40000000"
                    value: "Inflammatory neuropathy, immunologically mediated"
                    language: "nl"
                    parents: [
                        "40000000"
                    ]
                    children: [
                        "42100000"
                        "42200000"
                        "42300000"
                        "42400000"
                    ]
                }
            ]

### GET
This API call will GET you the Data Reference with the provided reference_type and reference_code.
            
+ Response 200

    [Data References - QueryString][]

# Group Mapping API
The purpose of this API is convert data from one format to another.
The available formats include:

- _kmehr_: an XML document following a KMEHR standard
- _csv_: a CSV file
- _healthdata_: the healthdata-specific data format for documents (including annotations)
- _healthdata-annotations_: a list of annotations 
- _healthdata-summary_: a list of properties exposed from a healthdata document, available for searching documents

The format in which the input data must be provided, as well as the format of the result, depends on the mapping at hand.
The supported mappings include:

- from _kmehr_ to _healthdata_: the XML must be provided as a single string, the result is a string containing a (json) healthdata document
- from _csv_ to _healthdata_: the CSV must be provided as a string, the result is a string containing a healthdata document
- from _healthdata_ to _healthdata-comments_: the healthdata document must be provided as a single string, the result is a list of strings
- from _healthdata_ to _healthdata-summary_: the healthdata document must be provided as a single string, the result is a JSON object (key-value)

## Mapping [/mappings{?from,to,dataCollectionDefinitionUri,content}]

### POST

+ Parameters
    + from (required, string, `"kmehr"`) ... The format of the input data
    + to (required, string, `"skryv"`) ... The desired format of the output
    + dataCollectionDefinitionUri (required, string, `"https://private-d734-healthdata.apiary-mock.com/datacollectiondefinitions/2"`) ... A reference to the data collection definition
    + content (required, string, `"<a><b c=\"d\"></b></a>"`) ... The input data. Double quotes musts be escaped.

+ Request (application/json)

    + Body
        
            {   
                "from": "kmehr",
                "to": "healthdata",
                "dataCollectionDefinitionUri": "https://private-d734-healthdata.apiary-mock.com/datacollectiondefinitions/1",
                "content": " ... KMEHR ... [not included here because it makes apiary crash]"
            }
+ Response 200 (application/json)
    
    + Body
            
            {   
                "log": "a log with details of how the mapping went, usefull for debugging purposes",
                "result": "{\"geslacht\":{\"values\":{\"vrouw\":{},\"man\":{}}},\"etniciteit_vader\":{\"values\":{\"kaukasisch\":{},\"maghrebijns\":{},\"zwartafrikaans\":{},\"andere\":{}}},\"etniciteit_moeder\":{\"values\":{\"kaukasisch\":{},\"maghrebijns\":{},\"zwartafrikaans\":{},\"andere\":{}}},\"taalproblemen\":{\"selectedOptions\":{},\"values\":{\"zijn_er_taalproblemen_die_de_communicatie_bemoeilijken\":{}}},\"puberteitprepuberteit\":{\"values\":{\"puberteit\":{},\"prepuberteit\":{}}},\"insulineschema\":{\"values\":{\"standaard_mengsels_toegediend_s_morgens_en_s_avonds_met_occasioneel_een_extra_toediening_van_snelleultrasnelle_insuline\":{},\"individueel_samengestelde_mengsels_toegediend_s_morgens_en_s_avonds_met_occasioneel_een_extra_toediening_van_snelleultrasnelle_insuline\":{},\"individueel_samengestelde_mengsels_toegediend_s_morgens_en_s_avonds_met_een_systematische_toediening_van_een_snelleultrasnelle_insuline_dwz_elke_dag\":{},\"basaalprandiale_insulinebehandeling_basaalbolus\":{},\"insulinepomp\":{},\"andere\":{}}},\"lengte\":{},\"gewicht\":{\"gewicht_kg\":76.3},\"systolische_bloeddruk\":{},\"diastolische_bloeddruk\":{},\"coeliakie\":{\"selectedOptions\":{},\"values\":{\"gebeurde_screening_naar_coeliakie\":{}}},\"schildklierimmuniteit\":{\"selectedOptions\":{},\"values\":{\"gebeurde_screening_naar_schildklierautoimmuniteit\":{}}},\"hypo_of_hyperthyreodie\":{\"selectedOptions\":{},\"values\":{\"wordt_de_patient_behandeld_voor_hypo_of_hyperthyreodie\":{}}},\"epilepsie\":{\"selectedOptions\":{},\"values\":{\"wordt_de_patient_behandeld_voor_epilepsie\":{}}},\"retinopathie\":{\"selectedOptions\":{},\"values\":{\"gebeurde_screening_naar_retinopathie\":{}}},\"nefropathie\":{\"selectedOptions\":{},\"values\":{\"gebeurde_screening_naar_nefropathie\":{}}},\"bloedlipiden\":{\"selectedOptions\":{},\"values\":{\"gebeurde_bepaling_van_bloedlipiden\":{}}},\"neuropathie\":{\"selectedOptions\":{},\"values\":{\"gebeurde_screening_naar_neuropathie\":{}}}}"
            }

+ Request (application/json)

    + Body
        
            {   
                "from": "xyz",
                "to": "abc",
                "dataCollectionDefinitionUri": "http://localhost:8080/healthdata_catalogue/datacollectiondefinitions/1",
                "content"   : " ... "
            }

+ Response 400 (application/json)

    + Body
    
            {
                "error": "invalid_request"
                "error_description": "There is no mapping from xyz to abc"
            }

+ Request (application/json)

    + Body
        
            {   
                "from": "xyz",
                "to": "abc",
                "dataCollectionDefinitionUri": "http://localhost:8080/healthdata_catalogue/datacollectiondefinitions/1",
                "content"   : " ... "
            }

+ Response 503 (application/json)

    + Body
    
            {
                "error": "failed_request",
                "error_description": "Could not obtain the data collection definition"
            }

+ Request (application/json)

    + Body
        
            {   
                "from": "kmehr",
                "to": "healthdata",
                "dataCollectionDefinitionUri": "http://localhost:8080/healthdata_catalogue/datacollectiondefinitions/1",
                "content": "This is not KMEHR"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "error": "invalid_input",
                "error_description": "The input data is not valid KMEHR"
            }

# Group Oauth 2.O API
Oauth 2.0 complient standard used to obtain the access token and the refresh token.

## Oauth Token Refresh Token [/oauth/token?{username,password,client_id,grant_type}]

### POST
Requests a Oauth token based on a username/password combination together with a client id that must be available in the Authentication database.
The actual token and a refresh token must be returned by the service

+ Parameters
    + username (required, string, `"admin"`) ... The username of client that requests the token.
    + password (required, string, `"admin_password"`) ... The password of client that requests the token.
    + client_id (required, string, `"healthdata_client"`) ... The client identifier for your application.
    + grant_type (required, string, `"password"`) ... The access grant type included in the request. The grant_type identifies what type of grant you are passing into the method.

+ Request (application/json)
    
    + Headers
    
            Accept: Application/json

+ Response 200 (application/json)
    
    + Body
            
            {
                "access_token": "d33af621-0a6e-40f7-b1f4-d4226b45bbad",
                "token_type": "bearer",
                "refresh_token": "ab3ed73f-7d83-4274-bce5-d8d5c2f01c70",
                "expires_in": 299,
                "scope": "read trust write"
            }

## Oauth Token Access Token [/oauth/token?{client_id,grant_type,refresh_token}]

### POST
Requests a Oauth access token based on the refreshtoken
The actual token and a refresh token must be returned by the service

+ Parameters
    + refresh_token (required, string, `"ab3ed73f-7d83-4274-bce5-d8d5c2f01c70"`) ... The refresh token received by a previous request at the Oauth2 service.
    + client_id (required, string, `"healthdata_client"`) ... The client identifier for your application.
    + grant_type (required, string, `"refresh_token"`) ... The access grant type included in the request. The grant_type identifies what type of grant you are passing into the method.

+ Request (application/json)
    
    + Headers
    
            Accept: Application/json

+ Response 200 (application/json)
    
    + Body
            
            {
                "access_token": "d33af621-0a6e-40f7-b1f4-d4226b45bbad",
                "token_type": "bearer",
                "refresh_token": "ab3ed73f-7d83-4274-bce5-d8d5c2f01c70",
                "expires_in": 299,
                "scope": "read trust write"
            }

# Group User API
API user for the management of Users in Healthdata.

The user domain object has the following attributes:

- id
- username
- password
- enabled
- dataCollectionNames
- metaData
- authorities

The authority object has the following attributes:

- authority

## User [/users]

### GET
Return a list of Users from the database. Only for ADMIN_USER

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"
            Range: "items=1-5"

+ Response 206 (application/hal+json)

    + Headers
    
            
            Content-Range: "items 1-5/10"

    + Body
    
            [
                {
                    "id": 1,
                    "username": "admin",
                    "password": "1106ac1b94cb6df950f6045d0e12da3f26991d0a686cb02a18caed535fb1c9a244dbbd5b639b5a16",
                    "enabled": true,
                    "dataCollectionNames": [ ],
                    "metaData": { },
                    "authorities": [
                        {
                            "authority": "ROLE_ADMIN"
                        }
                    ]
                },
                {
                    "id": 2,
                    "username": "user",
                    "password": "b88854a1e7f12df34000143317e2641beae6afe878b26fb7ec455359c193c51a427c58095c07c3c1",
                    "enabled": true,
                    "dataCollectionNames": [
                        "TEST",
                    ],
                    "metaData": {
                        "lastBoards": "{\"columns\":\"{}\",\"dataCollection\":1,\"qualities\":\"{}\",\"statuses\":\"{\\\"IN_PROGRESS\\\":true,\\\"SUBMITTED\\\":true,\\\"REVIEW_IN_PROGRESS\\\":true,\\\"CORRECTIONS_NEEDED\\\":true,\\\"APPROVED\\\":true,\\\"UNAUTHORISED\\\":true,\\\"SUBMISSION_FAILED\\\":true,\\\"NEW\\\":true,\\\"NEW_CORRECTIONS\\\":true,\\\"ANNOTATIONS_NEEDED\\\":true,\\\"ANNOTATIONS_IN_PROGRESS\\\":true,\\\"CORRECTIONS_REQUESTED\\\":true,\\\"DELETED\\\":true,\\\"CORRECTIONS_REQUESTED_FAILED\\\":true}\",\"identifications\":\"{}\",\"timings\":\"{}\",\"itemsPerPage\":10,\"columnSort\":\"{}\"}",
                        "activeDatacollection": "TEST"
                    },
                    "authorities": [
                        {
                        "authority": "ROLE_USER"
                        }
                    ]
                },
                {
                    "id": 3,
                    "username": "user2",
                    "password": "b88854a1e7f12df34000143317e2641beae6afe878b26fb7ec455359c193c51a427c58095c07c3c1",
                    "enabled": true,
                    "dataCollectionNames": [
                        "TEST",
                    ],
                    "metaData": {
                        "lastBoards": "{\"columns\":\"{}\",\"dataCollection\":1,\"qualities\":\"{}\",\"statuses\":\"{\\\"IN_PROGRESS\\\":true,\\\"SUBMITTED\\\":true,\\\"REVIEW_IN_PROGRESS\\\":true,\\\"CORRECTIONS_NEEDED\\\":true,\\\"APPROVED\\\":true,\\\"UNAUTHORISED\\\":true,\\\"SUBMISSION_FAILED\\\":true,\\\"NEW\\\":true,\\\"NEW_CORRECTIONS\\\":true,\\\"ANNOTATIONS_NEEDED\\\":true,\\\"ANNOTATIONS_IN_PROGRESS\\\":true,\\\"CORRECTIONS_REQUESTED\\\":true,\\\"DELETED\\\":true,\\\"CORRECTIONS_REQUESTED_FAILED\\\":true}\",\"identifications\":\"{}\",\"timings\":\"{}\",\"itemsPerPage\":10,\"columnSort\":\"{}\"}",
                        "activeDatacollection": "TEST"
                    },
                    "authorities": [
                        {
                        "authority": "ROLE_USER"
                        }
                    ]
                },
                {
                    "id": 4,
                    "username": "user3",
                    "password": "b88854a1e7f12df34000143317e2641beae6afe878b26fb7ec455359c193c51a427c58095c07c3c1",
                    "enabled": true,
                    "dataCollectionNames": [
                        "TEST",
                    ],
                    "metaData": {
                        "lastBoards": "{\"columns\":\"{}\",\"dataCollection\":1,\"qualities\":\"{}\",\"statuses\":\"{\\\"IN_PROGRESS\\\":true,\\\"SUBMITTED\\\":true,\\\"REVIEW_IN_PROGRESS\\\":true,\\\"CORRECTIONS_NEEDED\\\":true,\\\"APPROVED\\\":true,\\\"UNAUTHORISED\\\":true,\\\"SUBMISSION_FAILED\\\":true,\\\"NEW\\\":true,\\\"NEW_CORRECTIONS\\\":true,\\\"ANNOTATIONS_NEEDED\\\":true,\\\"ANNOTATIONS_IN_PROGRESS\\\":true,\\\"CORRECTIONS_REQUESTED\\\":true,\\\"DELETED\\\":true,\\\"CORRECTIONS_REQUESTED_FAILED\\\":true}\",\"identifications\":\"{}\",\"timings\":\"{}\",\"itemsPerPage\":10,\"columnSort\":\"{}\"}",
                        "activeDatacollection": "TEST"
                    },
                    "authorities": [
                        {
                        "authority": "ROLE_USER"
                        }
                    ]
                },
                {
                    "id": 5,
                    "username": "user4",
                    "password": "b88854a1e7f12df34000143317e2641beae6afe878b26fb7ec455359c193c51a427c58095c07c3c1",
                    "enabled": true,
                    "dataCollectionNames": [
                        "TEST",
                    ],
                    "metaData": {
                        "lastBoards": "{\"columns\":\"{}\",\"dataCollection\":1,\"qualities\":\"{}\",\"statuses\":\"{\\\"IN_PROGRESS\\\":true,\\\"SUBMITTED\\\":true,\\\"REVIEW_IN_PROGRESS\\\":true,\\\"CORRECTIONS_NEEDED\\\":true,\\\"APPROVED\\\":true,\\\"UNAUTHORISED\\\":true,\\\"SUBMISSION_FAILED\\\":true,\\\"NEW\\\":true,\\\"NEW_CORRECTIONS\\\":true,\\\"ANNOTATIONS_NEEDED\\\":true,\\\"ANNOTATIONS_IN_PROGRESS\\\":true,\\\"CORRECTIONS_REQUESTED\\\":true,\\\"DELETED\\\":true,\\\"CORRECTIONS_REQUESTED_FAILED\\\":true}\",\"identifications\":\"{}\",\"timings\":\"{}\",\"itemsPerPage\":10,\"columnSort\":\"{}\"}",
                        "activeDatacollection": "TEST"
                    },
                    "authorities": [
                        {
                        "authority": "ROLE_USER"
                        }
                    ]
                }
            ]
            
### POST
Add a new user to the User database. Only for ADMIN_USER.

+ Parameters
    + user (required, User) ... The user object to store

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

    + Body
    
            {
                "username": "user",
                "password": "user_password",
                "enabled": true,
                "dataCollectionNames": [
                    "TEST",
                ],
                "metaData":  {
                        "TUTORIAL_VIEWED": "false"
                },
                "authorities": [
                    {
                    "authority": "ROLE_USER"
                    }
                ]
            }

+ Response 200 (application/json)
    
    + Body
        
            {
                "id":"2",
                "username": "user",
                "password": "b88854a1e7f12df34000143317e2641beae6afe878b26fb7ec455359c193c51a427c58095c07c3c1",
                "enabled": true,
                "dataCollectionNames": [
                    "TEST",
                ],
                "metaData":  {
                        "TUTORIAL_VIEWED": "false"
                },
                "authorities": [
                    {
                    "authority": "ROLE_USER"
                    }
                ]
            }

## User - ID [/users/{id}]
Only for ADMIN_USER

+ Parameters
    + id (required, string, `"1"`) ... unique ID of the User object. Has example value.

+ Model (application/hal+json)

    + Body
        
            {
                "id": 1,
                "username": "admin",
                "password": "1106ac1b94cb6df950f6045d0e12da3f26991d0a686cb02a18caed535fb1c9a244dbbd5b639b5a16",
                "enabled": true,
                "dataCollectionNames": [ ],
                "metaData": { },
                "authorities": [
                    {
                        "authority": "ROLE_ADMIN"
                    }
                ]
            }

###GET
Retrieve a user object based on user id

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200
    [User - ID][]

###PUT
Updates an existing user object. For example for a password change. Only for ADMIN_USER

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

    + Body
        
            {
                "id": 1,
                "username": "admin",
                "password": "new_password",
                "enabled": true,
                "dataCollectionNames": [ ],
                "metaData": { },
                "authorities": [
                    {
                        "authority": "ROLE_ADMIN"
                    }
                ]
            }
            
+ Response 200 (application/json)
    
    + Body
        
            {
                "id": 1,
                "username": "admin",
                "password": "1106ac1b94cb6df950f6045d0e12da3f26991d0a686cb02a18caed535fb1c9a244dbbd5b639b5a16",
                "enabled": true,
                "dataCollectionNames": [ ],
                "metaData": { },
                "authorities": [
                    {
                        "authority": "ROLE_ADMIN"
                    }
                ]
            }

+ Response 404

        Attempt to get a non existing [USER] object with id [1]

###DELETE

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 204

+ Response 404

        Attempt to get a non existing [USER] object with id [1]

## User - self [/users/me]

###GET
Retrieves all the user data of the logged in user without the password property.

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"
            Accept: "Application/json" 

+ Response 200
    + Body
        
            {
                "id": 1,
                "username": "admin",
                "password": null,
                "enabled": true,
                "dataCollectionNames": [ ],
                "metaData": { },
                "authorities": [
                    {
                        "authority": "ROLE_ADMIN"
                    }
                ]
            }

# Group Validation API
API used for the validation of data collection instances.

## Validation [/validations{?dataCollectionDefinitionUri,content}]

### POST
Perform a validation of a data collection instance.

+ Parameters
    + dataCollectionDefinitionUri (required, string, `"https://private-d734-healthdata.apiary-mock.com/datacollectiondefinitions/2"`) ... A reference to the data collection definition
    + content (required, string, `"{ \"niss\": 12345 }"`) ... A string with the content of the data collection instance. Double quotes must be escaped.

+ Request (application/json)

    + Body
        
            {
                "dataCollectionDefinitionUri": "https://private-d734-healthdata.apiary-mock.com/datacollectiondefinitions/1",
                "content"   : "{\"algemeen\":{\"creatiedatum_van_klinische_file\":\"Mon Sep 01 2014 00:00:00 GMT+0200 (CEST)\",\"jaar_van_datacollectie\":2013},\"patientgegevens\":{\"geslacht\":{\"selectedChoice\":\"Vrouw\"},\"etniciteit_vader\":{\"selectedChoice\":\"Kaukasisch\"},\"etniciteit_moeder\":{\"selectedChoice\":\"Maghrebijns\"},\"datum_van_de_eerste_insulinetoediening\":\"Thu Feb 10 2011 00:00:00 GMT+0100 (CET)\",\"patient_niss\":1234,\"geboortemaand\":7,\"geboortejaar\":1999},\"datacollectie\":{\"algemeen\":{\"taalproblemen\":{\"selectedChoices\":{}},\"puberteitprepuberteit\":{\"selectedChoice\":\"Puberteit\"},\"insulineschema\":{\"selectedChoice\":\"Insulinepomp\"},\"datum_van_de_meest_recente_consultatie\":\"Fri Feb 15 2013 00:00:00 GMT+0100 (CET)\",\"de_patient_was_gedurende_het_ganse_kalenderjaar_in_behandeling_bij_dit_centrum\":true},\"metingen\":{\"lengte\":{},\"gewicht\":{},\"systolische_bloeddruk\":{\"systolische_bloeddruk_mmhg\":123},\"diastolische_bloeddruk\":{\"diastolische_bloeddruk_mmhg\":120}},\"screenings\":{\"coeliakie\":{\"selectedChoices\":{}},\"schildklierimmuniteit\":{\"selectedChoices\":{}},\"hypo_of_hyperthyreodie\":{\"selectedChoices\":{}},\"epilepsie\":{\"selectedChoices\":{}},\"retinopathie\":{\"selectedChoices\":{}},\"nefropathie\":{\"selectedChoices\":{}},\"bloedlipiden\":{\"selectedChoices\":{}},\"neuropathie\":{\"selectedChoices\":{}}}}}"
            }

+ Response 200 (application/json)
    
    + Body
        
            {   
                "validation_errors": [
                    "Weight is a required field.",
                    "Height must be a non-negative number."
                ],
                "validation_warnings": [
                    "Please verify the age."
                ]
            }

+ Request (application/json)

    + Body
        
            {
                "dataCollectionDefinitionUri": "https://private-d734-healthdata.apiary-mock.com/datacollectiondefinitions/1",
                "content"   : "{\"algemeen\":{\"creatiedatum_van_klinische_file\":\"Mon Sep 01 2014 00:00:00 GMT+0200 (CEST)\",\"jaar_van_datacollectie\":2013},\"patientgegevens\":{\"geslacht\":{\"selectedChoice\":\"Vrouw\"},\"etniciteit_vader\":{\"selectedChoice\":\"Kaukasisch\"},\"etniciteit_moeder\":{\"selectedChoice\":\"Maghrebijns\"},\"datum_van_de_eerste_insulinetoediening\":\"Thu Feb 10 2011 00:00:00 GMT+0100 (CET)\",\"patient_niss\":1234,\"geboortemaand\":7,\"geboortejaar\":1999},\"datacollectie\":{\"algemeen\":{\"taalproblemen\":{\"selectedChoices\":{}},\"puberteitprepuberteit\":{\"selectedChoice\":\"Puberteit\"},\"insulineschema\":{\"selectedChoice\":\"Insulinepomp\"},\"datum_van_de_meest_recente_consultatie\":\"Fri Feb 15 2013 00:00:00 GMT+0100 (CET)\",\"de_patient_was_gedurende_het_ganse_kalenderjaar_in_behandeling_bij_dit_centrum\":true},\"metingen\":{\"lengte\":{},\"gewicht\":{},\"systolische_bloeddruk\":{\"systolische_bloeddruk_mmhg\":123},\"diastolische_bloeddruk\":{\"diastolische_bloeddruk_mmhg\":120}},\"screenings\":{\"coeliakie\":{\"selectedChoices\":{}},\"schildklierimmuniteit\":{\"selectedChoices\":{}},\"hypo_of_hyperthyreodie\":{\"selectedChoices\":{}},\"epilepsie\":{\"selectedChoices\":{}},\"retinopathie\":{\"selectedChoices\":{}},\"nefropathie\":{\"selectedChoices\":{}},\"bloedlipiden\":{\"selectedChoices\":{}},\"neuropathie\":{\"selectedChoices\":{}}}}}"
            }

+ Response 503 (application/json)
    
    + Body
        
            {
                "error": "failed_request",
                "error_description": "Could not obtain the data collection definition"
            }

# Group Workflow API
Workflow-related resources of the **HealthData API**

The workflow resource has the following attributes:

- id
- readableId
- status
- dataCollectionName
- dataCollectionDefinitionId
- metaData
- createdOn
- updatedOn
- history
- senderDetails
- hd4dpWorkflowId
- documentUri
- allowedActions
- dataCollectionDefinitionUri

The history attribute itself has the following attributes:

- action
- newStatus
- executedOn
- executedBy

The senderDetails attribute itself has the following attributes:

- id
- identificationType
- identificationValue
- applicationId
- codageFilename

## Workflow [/workflows]

+ Model (application/json)

    JSON representation of a Workflow resource. 

    + Body

            {
                "id": 1,
                "readableId": "TEST_0000-0143",
                "status": "APPROVED",
                "dataCollectionName": "TEST",
                "dataCollectionDefinitionId": 1,
                "metaData": {
                    "CODED_PATIENT_IDENTIFIER": "TEST_INSS_0000-0001"
                },
                "createdOn": "2015-04-08T17:44:25Z",
                "updatedOn": "2015-04-08T17:45:17Z",
                "history": [
                    {
                        "action": "CREATE_FOR_REVIEW",
                        "newStatus": "NEW",
                        "executedOn": "2015-04-08T17:44:28Z",
                        "executedBy": "Messaging Service"
                    },
                    {
                        "action": "UPDATE_STATUS",
                        "newStatus": "APPROVED",
                        "executedOn": "2015-04-08T17:45:17Z",
                        "executedBy": "DWH Service"
                    }
                ],
                "senderDetails": {
                    "id": 1,
                    "identificationType": "NIHII",
                    "identificationValue": "43989894",
                    "applicationId": "",
                    "codageFilename": "healthdata.csv"
                },
                "hd4dpWorkflowId": "MTU3OA==",
                "documentUri": "http://int.healthdata.be:80/healthdata_hd4res/workflows/150/documents",
                "allowedActions": [ ],
                "dataCollectionDefinitionUri": "http://int.healthdata.be:80/healthdata_catalogue/datacollectiondefinitions/1"
            }

### Create a workflow item [POST]
Create a new Workflow 
+ Request
    
    + Headers
    
            Accept: application/json
            Content-Type: application/json
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

    + Body
        
            {
                "action": "CREATE",
                "dataCollectionName": "TEST"
            }

+ Response 200 (application/json)

    + Body
    
            {
                "id": 1,
                "readableId": null,
                "status": "IN_PROGRESS",
                "dataCollectionName": "IQEDFoot",
                "dataCollectionDefinitionId": 3,
                "metaData": {
                    "PATIENT_IDENTIFIER": "11111111111"
                },
                "createdOn": "2014-01-01T00:00:00Z",
                "updatedOn": "2014-01-02T00:00:00Z",
                "history": [
                    {
                        "action": "CREATE",
                        "newStatus": "IN_PROGRESS",
                        "executedOn": "2014-01-01T00:00:00Z",
                        "executedBy": "admin"
                    },
                    {
                        "action": "SAVE",
                        "newStatus": "IN_PROGRESS",
                        "executedOn": "2014-01-02T00:00:00Z",
                        "executedBy": "admin"
                    }
                ],
                "senderDetails": {
                    "applicationId": "",
                    "id": 0,
                    "codageFilename": "",
                    "identificationType": "",
                    "identificationValue": ""
                },
                "hd4dpWorkflowId": null,
                "documentUri": "http://test.healthdata.be:80/healthdata_hd4dp/workflows/1/documents",
                "allowedActions": [
                    {
                        "sentOn": null,
                        "metaData": null,
                        "action": "SUBMIT",
                        "endStatus": "SUBMITTED"
                    },
                    {
                        "sentOn": null,
                        "metaData": null,
                        "documentContent": null,
                        "action": "SAVE",
                        "endStatus": "IN_PROGRESS"
                    },
                    {
                        "sentOn": null,
                        "metaData": null,
                        "action": "DELETE",
                        "endStatus": "DELETED"
                    }
                ],
                "dataCollectionDefinitionUri": "http://test.healthdata.be:80/healthdata_catalogue/datacollectiondefinitions/3"
            }

### Workflow - ID [/workflows/{id}]

+ Parameters
    + id (required, string, `"1"`) ... `ID` of the Workflow item. Has example value.

+ Model (application/json)

    JSON representation of a DataCollectionDefinition resource. 

    + Body

            {
                "id": 1,
                "readableId": "TEST_0000-0143",
                "status": "APPROVED",
                "dataCollectionName": "TEST",
                "dataCollectionDefinitionId": 1,
                "metaData": {
                    "CODED_PATIENT_IDENTIFIER": "TEST_INSS_0000-0001"
                },
                "createdOn": "2015-04-08T17:44:25Z",
                "updatedOn": "2015-04-08T17:45:17Z",
                "history": [
                    {
                        "action": "CREATE_FOR_REVIEW",
                        "newStatus": "NEW",
                        "executedOn": "2015-04-08T17:44:28Z",
                        "executedBy": "Messaging Service"
                    },
                    {
                        "action": "UPDATE_STATUS",
                        "newStatus": "APPROVED",
                        "executedOn": "2015-04-08T17:45:17Z",
                        "executedBy": "DWH Service"
                    }
                ],
                "senderDetails": {
                    "id": 1,
                    "identificationType": "NIHII",
                    "identificationValue": "43989894",
                    "applicationId": "",
                    "codageFilename": "healthdata.csv"
                },
                "hd4dpWorkflowId": "MTU3OA==",
                "documentUri": "http://int.healthdata.be:80/healthdata_hd4res/workflows/150/documents",
                "allowedActions": [ ],
                "dataCollectionDefinitionUri": "http://int.healthdata.be:80/healthdata_catalogue/datacollectiondefinitions/1"
            }


### Retrieve a Workflow [GET]
Get a Workflow with the provided ID

+ Request
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200

    [Workflow - ID][]

## Workflow - QueryString [/workflows{?status,dataCollectionName,dataCollectionDefinitionId,fullSearch,returnDeleted,user,senderIdentificationValue,createdBefore,createdAfter,updatedBefore,updatedAfter,dateOfBirthBefore,dateOfBirthAfter_metaData}]
 
### List all Workflows [GET]
List all existing Workflows that match the given QueryString parameters.

+ Parameters
    + status (optional, string) ... Status of the Workflow
    + dataCollectionName (optional, string) ... DataCollectionName of the Workflow
    + dataCollectionDefinitionId (optional, string) ... DataCollectionDefinitionId of the Workflow
    + fullSearch (optional, string) ... If the value is true you will load the document with content in the same request
    + returnDeleted (optional, string) ... Whether to return workflows with status DELETED or not (default: false)
    + user (optional, string) ... username of the user that has executed at least one action on the workflow
    + senderIdentificationValue (optional, string) ... identification value of the sender
    + createdBefore (optional, string) ... date format = yyyy-MM-dd'T'HH:mm:ssXXX
    + createdAfter (optional, string) ... date format = yyyy-MM-dd'T'HH:mm:ssXXX
    + updatedBefore (optional, string) ... date format = yyyy-MM-dd'T'HH:mm:ssXXX
    + updatedAfter (optional, string) ... date format = yyyy-MM-dd'T'HH:mm:ssXXX
    + dateOfBirthBefore (optional, string) ... date format = yyyy-MM-dd'T'HH:mm:ssXXX
    + dateOfBirthAfter (optional, string) ... date format = yyyy-MM-dd'T'HH:mm:ssXXX
    + _metaData (optional, string) ... All other parameters are concidered metaData where the name is the key of the metaData end the value is the value of the metaData

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200 (application/hal+json)

    + Body
    
            [
                {
                    "id": 1,
                    "readableId": null,
                    "status": "IN_PROGRESS",
                    "dataCollectionName": "TEST",
                    "dataCollectionDefinitionId": 105,
                    "metaData": { },
                    "createdOn": "2015-04-22T13:06:27Z",
                    "updatedOn": "2015-04-22T13:06:28Z",
                    "history": [
                        {
                            "action": "CREATE",
                            "newStatus": "IN_PROGRESS",
                            "executedOn": "2015-04-22T13:06:28Z",
                            "executedBy": "user"
                        }
                    ],
                    "senderDetails": {
                        "applicationId": "",
                        "id": 0,
                        "codageFilename": "",
                        "identificationType": "",
                        "identificationValue": ""
                    },
                    "hd4dpWorkflowId": "808",
                    "documentUri": null,
                    "allowedActions": [
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "SUBMIT",
                            "endStatus": "SUBMITTED"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "documentContent": null,
                            "action": "SAVE",
                            "endStatus": "IN_PROGRESS"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "DELETE",
                        "endStatus": "DELETED"
                        }
                    ],
                    "dataCollectionDefinitionUri": "http://test.healthdata.be:80/healthdata_catalogue/datacollectiondefinitions/105"
                },
                {
                    "id": 2,
                    "readableId": null,
                    "status": "IN_PROGRESS",
                    "dataCollectionName": "TEST",
                    "dataCollectionDefinitionId": 105,
                    "metaData": { },
                    "createdOn": "2015-04-22T13:06:27Z",
                    "updatedOn": "2015-04-22T13:06:28Z",
                    "history": [
                        {
                            "action": "CREATE",
                            "newStatus": "IN_PROGRESS",
                            "executedOn": "2015-04-22T13:06:28Z",
                            "executedBy": "user"
                        }
                    ],
                    "senderDetails": {
                        "applicationId": "",
                        "id": 0,
                        "codageFilename": "",
                        "identificationType": "",
                        "identificationValue": ""
                    },
                    "hd4dpWorkflowId": "808",
                    "documentUri": null,
                    "allowedActions": [
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "SUBMIT",
                            "endStatus": "SUBMITTED"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "documentContent": null,
                            "action": "SAVE",
                            "endStatus": "IN_PROGRESS"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "DELETE",
                        "endStatus": "DELETED"
                        }
                    ],
                    "dataCollectionDefinitionUri": "http://test.healthdata.be:80/healthdata_catalogue/datacollectiondefinitions/105"
                }
            ]

+ Request
    
    + Headers
        
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"
            Range: "items=1-2"
            

+ Response 206 (application/hal+json)

    + Headers
    
            Content-Range: "items 1-2/10"

    + Body

            [
                {
                    "id": 1,
                    "readableId": null,
                    "status": "IN_PROGRESS",
                    "dataCollectionName": "TEST",
                    "dataCollectionDefinitionId": 105,
                    "metaData": { },
                    "createdOn": "2015-04-22T13:06:27Z",
                    "updatedOn": "2015-04-22T13:06:28Z",
                    "history": [
                        {
                            "action": "CREATE",
                            "newStatus": "IN_PROGRESS",
                            "executedOn": "2015-04-22T13:06:28Z",
                            "executedBy": "user"
                        }
                    ],
                    "senderDetails": {
                        "applicationId": "",
                        "id": 0,
                        "codageFilename": "",
                        "identificationType": "",
                        "identificationValue": ""
                    },
                    "hd4dpWorkflowId": "808",
                    "documentUri": null,
                    "allowedActions": [
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "SUBMIT",
                            "endStatus": "SUBMITTED"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "documentContent": null,
                            "action": "SAVE",
                            "endStatus": "IN_PROGRESS"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "DELETE",
                        "endStatus": "DELETED"
                        }
                    ],
                    "dataCollectionDefinitionUri": "http://test.healthdata.be:80/healthdata_catalogue/datacollectiondefinitions/105"
                },
                {
                    "id": 2,
                    "readableId": null,
                    "status": "IN_PROGRESS",
                    "dataCollectionName": "TEST",
                    "dataCollectionDefinitionId": 105,
                    "metaData": { },
                    "createdOn": "2015-04-22T13:06:27Z",
                    "updatedOn": "2015-04-22T13:06:28Z",
                    "history": [
                        {
                            "action": "CREATE",
                            "newStatus": "IN_PROGRESS",
                            "executedOn": "2015-04-22T13:06:28Z",
                            "executedBy": "user"
                        }
                    ],
                    "senderDetails": {
                        "applicationId": "",
                        "id": 0,
                        "codageFilename": "",
                        "identificationType": "",
                        "identificationValue": ""
                    },
                    "hd4dpWorkflowId": "808",
                    "documentUri": null,
                    "allowedActions": [
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "SUBMIT",
                            "endStatus": "SUBMITTED"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "documentContent": null,
                            "action": "SAVE",
                            "endStatus": "IN_PROGRESS"
                        },
                        {
                            "sentOn": null,
                            "metaData": null,
                            "action": "DELETE",
                        "endStatus": "DELETED"
                        }
                    ],
                    "dataCollectionDefinitionUri": "http://test.healthdata.be:80/healthdata_catalogue/datacollectiondefinitions/105"
                }
            ]

## Workflow - QueryString [/workflows/search/{dataCollectionNames}]
 
### Workflow Search API [POST]
Forwards the request to the ElasticSearch engine, only searching in the indexes specified by the dataCollectionNames parameter.

+ Parameters
    + dataCollectionNames (required, string, `"bcfr,bnmdr"`) ... List of the data collections in which the search should be executed, separate by commas.
    
+ Request
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200 (application/json)

    + Body

            { "took": 15,
                "timed_out": false,
                "_shards": {
                    "total": 1,
                    "successful": 1,
                    "failed": 0
                },
                "hits": {
                    "total": 1,
                    "max_score": 1,
                    "hits": [
                        {
                            "_index": "test",
                            "_type": "workflow",
                            "_id": "44358",
                            "_score": 1,
                            "_source": {
                                "id": 44358,
                                "readableId": null,
                                "status": "DELETED",
                                "document": null,
                                "dataCollectionName": "TEST",
                                "dataCollectionDefinitionId": 177,
                                "metaData": {},
                                "dateMetaData": {},
                                "technicalMetaData": {},
                                "createdOn": "2015-08-17T11:52:46+02:00",
                                "updatedOn": "2015-08-17T11:52:50+02:00",
                                "history": [
                                    {
                                        "id": 44359,
                                        "action": "CREATE",
                                        "newStatus": "IN_PROGRESS",
                                        "executedOn": "2015-08-17T11:52:46+02:00",
                                        "executedBy": "user",
                                        "source": null,
                                        "numberOfErrors": null,
                                        "numberOfWarnings": null,
                                        "percentageOfMandatory": null,
                                        "percentageOfOptional": null
                                    },
                                    {
                                        "id": null,
                                        "action": "DELETE",
                                        "newStatus": "DELETED",
                                        "executedOn": null,
                                        "executedBy": "user",
                                        "source": null,
                                        "numberOfErrors": null,
                                        "numberOfWarnings": null,
                                        "percentageOfMandatory": null,
                                        "percentageOfOptional": null
                                    }
                                ],
                                "hd4dpWorkflowId": "44358",
                                "submittedOnce": false
                            }
                        }
                    ]
                }
            }
            
## Workflow - ID - Documents [/workflows/{id}/documents]

### Retrieve a Document [GET]
Retrieve a Document for Workflow with the given 'ID'

+ Parameters
    + id (required, string, `"1"`) ... `ID` of the Workflow item. Has example value.
    
+ Request
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200 (application/json)

    + Body

            {
                "format": "SKRYV",
                "documentContent": "{}"
            }

## Workflow - Actions [/workflows/actions]

### List all Actions [GET]
List all actions that can be executed on a Workflow.
+ Request
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

+ Response 200 (application/json)

    + Body
    
            [
                {
                    "action": "CREATE",
                    "dataCollectionId": null
                },
                {
                    "action": "SAVE",
                    "documentContent": null,
                    "metaData": null
                },
                {
                    "action": "SUBMIT"
                },
                {
                    "action": "START_CORRECTION"
                },
                {
                    "action": "CREATE_FOR_REVIEW",
                    "documentContent": null,
                    "hd4dpWorkflowUri": null
                },
                {
                    "action": "START_REVIEW"
                },
                {
                    "action": "SAVE_REVIEW",
                    "documentContent": null
                },
                {
                    "action": "ACCEPT"
                },
                {
                    "action": "REJECT"
                }
            ]

## Workflow - ID - Actions [/workflows/{id}/actions]

### Execute Action [POST]
Execute an action on the Workflow with this 'ID'.

+ Parameters
    + id (required, string, `"1"`) ... `ID` of the Workflow item. Has example value.

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

    + Body
        
            {
              "action": "SAVE",
              "metaData": {
                                "PERSON" : "Robin Merckx",
                                "YEAR" : "2014"
                          },
              "documentContent": "{}"
            }
+ Response 200

    + Body

            {
                    "id": 1,
                    "hd4dpWorkflowUri": "http://localhost:8080/healthdata_hd4dp/workflows/1",
                    "landingZoneWorkflowUri": null,
                    "status": "IN_PROGRESS",
                    "identificationType": "NIHI",
                    "identificationValue": "NIHI-123",
                    "documentUri": "http://localhost:8080/healthdata_hd4dp/workflows/1/documents",
                    "dataCollectionDefinitionUri": "testUri",
                    "metaData": {
                        "PERSON": "Robin Merckx",
                        "YEAR": "2014"
                    },
                    "createdOn": "2014-09-10 09:07:15",
                    "updatedOn": "2014-09-10 09:18:27",
                    "history": [
                        {
                            "action": "CREATE",
                            "newStatus": "IN_PROGRESS",
                            "executedOn": "2014-09-10 09:07:15",
                            "executedBy": "admin"
                        },
                        {
                            "action": "SAVE",
                            "newStatus": "IN_PROGRESS",
                            "executedOn": "2014-09-10 09:18:27",
                            "executedBy": "admin"
                        }
                    ],
                    "allowedActions": [
                        {
                            "action": "SAVE",
                            "documentContent": null,
                            "metaData": null
                        },
                        {
                            "action": "SUBMIT"
                        }
                    ]
                }

# Group Patient API
Add partient informatin from the National Register.


## Patient - QueryString [/patient/{ssin}]

+ Parameters
    + ssin (required, string, `"85101138771"`) ... ssin number of the patient. Has example value.
    
+ Model (application/json)

    JSON representation of a Data Reference resource. 


    + Headers

            Accept: "application/json"
            Authorization: "Bearer d33af621-0a6e-40f7-b1f4-d4226b45bbad"

    + Body

            {
                "lastName": "Merckx",
                "firstName": "Robin",
                "dateOfBirth": "1985-10-11 00:00:00",
                "gender": "MALE",
                "district": "1830",
                "deceased": false,
                "dateOfDeath": null,
                "inss": "85101138771"
            }

### GET
This API call will GET you the patient information enriched by the National Register.

+ Response 200

    [Patient - QueryString][]
